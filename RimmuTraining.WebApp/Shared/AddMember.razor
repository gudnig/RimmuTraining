@using RimmuTraining.WebApp.Domain.Members

@inherits OwningComponentBase<MembersService>

<Button Clicked="@ShowModal">@ChildContent</Button>

<Modal @ref="modalRef">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <ModalHeader>
            <ModalTitle>Register New Member</ModalTitle>
            <CloseButton Clicked="@HideModal" />
        </ModalHeader>
        <Form>
            <ModalBody>
                <ErrorAlert @ref="ErrorAlert"></ErrorAlert>
                <Field>
                    <Validation Validator="@ValidationRule.IsNotEmpty">
                        <FieldLabel>Name</FieldLabel>
                        <TextEdit @bind-Text="newMemberName" Placeholder="Enter full name...">
                            <Feedback>
                                <ValidationError>Please enter the full name.</ValidationError>

                            </Feedback>
                        </TextEdit>

                    </Validation>
                </Field>


            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Primary" Clicked="@CreateMember" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" Class="is-right">Add</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>



@code {
    [Parameter]
    public EventCallback<Member> OnAdd { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private ErrorAlert ErrorAlert;

    private Modal modalRef;
    private string newMemberName = "";


    private void ShowModal()
    {
        newMemberName = "";
        modalRef.Show();
    }

    private void HideModal()
    {
        modalRef.Hide();
    }


    private async Task CreateMember()
    {
        if (!string.IsNullOrWhiteSpace(newMemberName))
        {
            Guid id = Guid.NewGuid();
            var result = await Service.CreateMemberAsync(newMemberName, id);
            if (result.Succeeded)
            {
                await OnAdd.InvokeAsync(new Member
                {
                    Id = id,
                    Name = newMemberName,

                });
                HideModal();
            }
            else
            {
                ErrorAlert.Show(result.Error);
            }
        }
    }
}


